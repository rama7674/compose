pipeline{
      agent none 
      parameters{
             choice( name:'environment', choices:['dev','qa'], description:'pick a env to deploy' )
             string( name:'r1', defaultValue:'1' , description: '')
             string( name:'img', defaultValue:'jboss:latest', description: '' )
             string( name:'myservices', defaultValue:'mydevservices' , description: '')
             choice( name:'ms', choices:['dev','qa'], description: 'pick any ' )
             
      }
      
      stages{
         stage('dev'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'environment', value:"dev"
              }
              
    
              steps{
                    
                    sh  ' git clone https://github.com/rama7674/compose.git '
                    
                    sh  ' echo "myservices=$myservice  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh >> sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack deploy -c docker-compose_ft.yml mydevstack '
              }
         }
         stage('qa'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'enironment', value:'qa'
                 }
              steps{
                   
                    sh  ' git clone https://github.com/rama7674/compose.git '
                    
                    sh  ' echo "myservices=$myservice  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh >> sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack deploy -c docker-compose_ft.yml myqastack '
              }
         }
      }
}
