pipeline{
      agent none 
      parameters{
             choice( name:'environment', choices:['dev','qa'], description:'pick a env to deploy' )
             string( name:'r1' defaultvalue:'1' )
             string( name:'img' defaultvalue:'jboss:latest' )
             string( name:'myservices' defaultvalue:'mydevservices' )
             string( name:'ms' defaultvalue:'qa' )
             choice( name:'image name', choices:[script to list the images], description:'pip' )
      }
      stages{
         stage('dev'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'enironment', value:'dev'
                 }
              steps{
                    sh  ' git clone https://github.com/rama7674/compose '
                    sh  ' echo "myservices=$myservice  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh >> sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack -c docker-compose_ft.yml mystack '
              }
         }
         stage('qa'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'enironment', value:'qa'
                 }
              steps{
                    sh  ' git clone https://github.com/rama7674/compose '
                    sh  ' echo "myservices=$myservice  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh >> sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack -c docker-compose_ft.yml mystack '
              }
         }
      }
}
